GPerlTokenInfo decl_tokens[] = {
	{Return, GPerlKind::Return, "Return", "return"},
	{Add, GPerlKind::Operator, "Add", "+"},
	{Sub, GPerlKind::Operator, "Sub", "-"},
	{Mul, GPerlKind::Operator, "Mul", "*"},
	{Div, GPerlKind::Operator, "Div", "/"},
	{Greater, GPerlKind::Operator, "Greater", ">"},
	{Less, GPerlKind::Operator, "Less", "<"},
	{AddEqual, GPerlKind::Assign, "AddEqual", "+="},
	{SubEqual, GPerlKind::Assign, "SubEqual", "-="},
	{MulEqual, GPerlKind::Assign, "MulEqual", "*="},
	{DivEqual, GPerlKind::Assign, "DivEqual", "/="},
	{StringAdd, GPerlKind::Assign, "StringAdd", ".="},
	{GreaterEqual, GPerlKind::Operator, "GreaterEqual", ">="},
	{LessEqual, GPerlKind::Operator, "LessEqual", "<="},
	{EqualEqual, GPerlKind::Operator, "EqualEqual", "=="},
	{NotEqual, GPerlKind::Operator, "NotEqual", "!="},
	{Inc, GPerlKind::Operator, "Inc", "++"},
	{Dec, GPerlKind::Operator, "Dec", "--"},
	{LeftShift, GPerlKind::Operator, "LeftShift", "<<"},
	{RightShift, GPerlKind::Operator, "RightShift", ">>"},
	{VarDecl, GPerlKind::Decl, "VarDecl", "my"},
	{FunctionDecl, GPerlKind::Decl, "FunctionDecl", "sub"},
	{Assign, GPerlKind::Assign, "Assign", "="},
	{Is, GPerlKind::SingleTerm, "Is", ""},
	{IsNot, GPerlKind::SingleTerm, "IsNot", "!"},
	{BuiltinFunc, GPerlKind::Function, "BuiltinFunc", "print"},
	{BuiltinFunc, GPerlKind::Function, "BuiltinFunc", "push"},
	{BuiltinFunc, GPerlKind::Function, "BuiltinFunc", "ref"},
	{BuiltinFunc, GPerlKind::Function, "BuiltinFunc", "sqrt"},
	{BuiltinFunc, GPerlKind::Function, "BuiltinFunc", "map"},
	{BuiltinFunc, GPerlKind::Function, "BuiltinFunc", "grep"},
	{BuiltinFunc, GPerlKind::Function, "BuiltinFunc", "keys"},
	{BuiltinFunc, GPerlKind::Function, "BuiltinFunc", "values"},
	{BuiltinFunc, GPerlKind::Function, "BuiltinFunc", "bless"},
	{BuiltinFunc, GPerlKind::Function, "BuiltinFunc", "defined"},
	{BuiltinFunc, GPerlKind::Function, "BuiltinFunc", "abs"},
	{BuiltinFunc, GPerlKind::Function, "BuiltinFunc", "atan2"},
	{BuiltinFunc, GPerlKind::Function, "BuiltinFunc", "cos"},
	{BuiltinFunc, GPerlKind::Function, "BuiltinFunc", "exp"},
	{BuiltinFunc, GPerlKind::Function, "BuiltinFunc", "hex"},
	{BuiltinFunc, GPerlKind::Function, "BuiltinFunc", "int"},
	{BuiltinFunc, GPerlKind::Function, "BuiltinFunc", "log"},
	{BuiltinFunc, GPerlKind::Function, "BuiltinFunc", "oct"},
	{BuiltinFunc, GPerlKind::Function, "BuiltinFunc", "rand"},
	{BuiltinFunc, GPerlKind::Function, "BuiltinFunc", "sin"},
	{BuiltinFunc, GPerlKind::Function, "BuiltinFunc", "sqrt"},
	{BuiltinFunc, GPerlKind::Function, "BuiltinFunc", "srand"},
	{IfStmt, GPerlKind::Stmt, "IfStmt", "if"},
	{ElseStmt, GPerlKind::Stmt, "ElseStmt", "else"},
	{ElsifStmt, GPerlKind::Stmt, "ElsifStmt", "elsif"},
	{UnlessStmt, GPerlKind::Stmt, "UnlessStmt", "unless"},
	{Comma, GPerlKind::Comma, "Comma", ","},
	{SemiColon, GPerlKind::StmtEnd, "SemiColon", ";"},
	{LeftParenthesis, GPerlKind::Symbol, "LeftParenthesis", "("},
	{RightParenthesis, GPerlKind::Symbol, "RightParenthesis", ")"},
	{LeftBrace, GPerlKind::Symbol, "LeftBrace", "{"},
	{RightBrace, GPerlKind::Symbol, "RightBrace", "}"},
	{LeftBracket, GPerlKind::Symbol, "LeftBracket", "["},
	{RightBracket, GPerlKind::Symbol, "RightBracket", "]"},
	{ArrayDereference, GPerlKind::Modifier, "ArrayDereference", "@{"},
	{HashDereference, GPerlKind::Modifier, "HashDereference", "%{"},
	{Key, GPerlKind::Term, "Key", ""},
	{Arrow, GPerlKind::Operator, "Arrow", "=>"},
	{Pointer, GPerlKind::Operator, "Pointer", "->"},
	{Package, GPerlKind::Stmt, "Package", "package"},
	{Class, GPerlKind::Stmt, "Class", ""},
	{Shift, GPerlKind::Operator, "Shift", "shift"},
	{CallDecl, GPerlKind::Decl, "CallDecl", "&"},
	{CodeRef, GPerlKind::SingleTerm, "CodeRef", "\\&"},
	{WhileStmt, GPerlKind::Stmt, "WhileStmt", "while"},
	{ForStmt, GPerlKind::Stmt, "ForStmt", "for"},
	{ForeachStmt, GPerlKind::Stmt, "ForeachStmt", "foreach"},
	{Annotation, GPerlKind::Annotation, "Annotation", "#@"},
	{ArgumentArray, GPerlKind::Term, "ArgumentArray", "@_"},
	{SpecificValue, GPerlKind::Term, "SpecificValue", "$_"},
	{ProgramArgument, GPerlKind::Term, "ProgramArgument", "@ARGV"},
	{FieldDecl, GPerlKind::Decl, "FieldDecl", ""},
	{TypeRef, GPerlKind::Ref, "TypeRef", ""},
	{LabelRef, GPerlKind::Ref, "LabelRef", ""},
	{LocalVarDecl, GPerlKind::Decl, "LocalVarDecl", ""},
	{GlobalVarDecl, GPerlKind::Decl, "GlobalVarDecl", ""},
	{MultiLocalVarDecl, GPerlKind::Decl, "MultiLocalVarDecl", ""},
	{MultiGlobalVarDecl, GPerlKind::Decl, "MultiGlobalVarDecl", ""},
	{Var, GPerlKind::Term, "Var", ""},
	{CodeVar, GPerlKind::Term, "CodeVar", ""},
	{ArrayVar, GPerlKind::Term, "ArrayVar", ""},
	{HashVar, GPerlKind::Term, "HashVar", ""},
	{Int, GPerlKind::Term, "Int", ""},
	{Double, GPerlKind::Term, "Double", ""},
	{String, GPerlKind::Term, "String", ""},
	{Object, GPerlKind::Term, "Object", ""},
	{Array, GPerlKind::Term, "Array", ""},
	{Hash, GPerlKind::Term, "Hash", ""},
	{Operator, GPerlKind::Operator, "Operator", ""},
	{LocalVar, GPerlKind::LocalValue, "LocalVar", ""},
	{LocalArrayVar, GPerlKind::LocalValue, "LocalArrayVar", ""},
	{LocalHashVar, GPerlKind::LocalValue, "LocalHashVar", ""},
	{GlobalVar, GPerlKind::GlobalValue, "GlobalVar", ""},
	{GlobalArrayVar, GPerlKind::GlobalValue, "GlobalArrayVar", ""},
	{GlobalHashVar, GPerlKind::GlobalValue, "GlobalHashVar", ""},
	{ArrayRef, GPerlKind::Ref, "ArrayRef", ""},
	{HashRef, GPerlKind::Ref, "HashRef", ""},
	{ArrayAt, GPerlKind::Get, "ArrayAt", ""},
	{HashAt, GPerlKind::Get, "HashAt", ""},
	{ArraySet, GPerlKind::Set, "ArraySet", ""},
	{HashSet, GPerlKind::Set, "HashSet", ""},
	{Function, GPerlKind::Decl, "Function", ""},
	{Call, GPerlKind::Function, "Call", ""},
	{Argument, GPerlKind::Term, "Argument", ""},
	{List, GPerlKind::Term, "List", ""},
	{Default, GPerlKind::Term, "Default", "undef"},
	{Undefined, GPerlKind::Undefined, "Undefined", ""},
};

